#handlers/text_handlers.py

from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from tg_bot_project.keyboards.inline_kb import educ_material_kb, schedule_kb
from tg_bot_project.utils.db import profile
from tg_bot_project.utils.request import ai_request

router = Router()

class SubState(StatesGroup):
    help_tg_id = State()
    ai_tg_id = State()

@router.message(F.text.lower() == "–ø—Ä–æ—Ñ–∏–ª—å" )
async def send_profile(message: types.Message):
    await message.answer(await profile(str(message.from_user.id)))

@router.message(F.text.lower() == "—É—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã" )
async def send_ed(message: types.Message):
    await message.answer("–°—Å–ª—ã–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ —Å —É—á–µ–±–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏",
                         reply_markup=educ_material_kb())

@router.message(F.text.lower() == "–ø–æ–º–æ—â—å" )
async def start_help(message: types.Message, state: FSMContext):
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å —Ä–∞–±–æ—Ç–Ω–∏–∫—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏")
    await state.set_state(SubState.help_tg_id)

@router.message(SubState.help_tg_id)
async def send_mes_to_admin(message: types.Message, state: FSMContext):
    await message.answer("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!‚úÖ\n–ñ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏!")
    await message.bot.send_message(chat_id=8019661877,
                           text=f'TG ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n<code>{message.from_user.id}</code>\n\n'
                                f'–°–æ–æ–±—â–µ–Ω–∏–µ:\n{message.text}')
    await state.clear()

@router.message(F.text.lower() == "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ" )
async def send_schedule(message: types.Message):
    await message.answer("üìÖ –ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞:",
                         reply_markup=schedule_kb())

@router.message(F.text.lower() == "–≤–æ–ø—Ä–æ—Å –∫ –∏–∏" )
async def start_ai(message: types.Message, state: FSMContext):
    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∫ –ò–ò")
    await state.set_state(SubState.ai_tg_id)


@router.message(SubState.ai_tg_id)
async def ans_ai(message: types.Message, state: FSMContext):
    await message.answer("–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!‚úÖ")
    await message.answer(await ai_request(str(message.text)))
    await state.clear()








